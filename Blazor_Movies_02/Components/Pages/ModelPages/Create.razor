@page "/models/create"
@* @using Microsoft.EntityFrameworkCore
@using Blazor_Movies_02.Models
@inject NavigationManager NavigationManager *@
@inject IDbContextFactory<Blazor_Movies_02.Data.BlazorMovies02Context> DbFactory
<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Model</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Model" OnValidSubmit="AddModel" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert"/>
            <div class="mb-3">
                <label for="title" class="form-label">Title:</label> 
                <InputText id="title" @bind-Value="Model.Title" class="form-control" /> 
                <ValidationMessage For="() => Model.Title" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="releasedate" class="form-label">ReleaseDate:</label> 
                <InputDate id="releasedate" @bind-Value="Model.ReleaseDate" class="form-control" /> 
                <ValidationMessage For="() => Model.ReleaseDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="genre" class="form-label">Genre:</label> 
                <InputText id="genre" @bind-Value="Model.Genre" class="form-control" /> 
                <ValidationMessage For="() => Model.Genre" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="price" class="form-label">Price:</label> 
                <InputNumber id="price" @bind-Value="Model.Price" class="form-control" /> 
                <ValidationMessage For="() => Model.Price" class="text-danger" /> 
            </div>        
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/models">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Model Model { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddModel()
    {
        using var context = DbFactory.CreateDbContext();
        context.Model.Add(Model);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/models");
    }
}
